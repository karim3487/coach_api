# Generated by Django 4.2.20 on 2025-04-24 11:21

import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("workouts", "0001_initial"),
        ("profiles", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Program",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the training program", max_length=100
                    ),
                ),
                ("slug", models.SlugField(max_length=100, unique=True)),
                (
                    "description",
                    models.TextField(
                        help_text="Description of the program structure and focus"
                    ),
                ),
                (
                    "days_per_week",
                    models.PositiveIntegerField(
                        help_text="Number of training days per week"
                    ),
                ),
                (
                    "duration_weeks",
                    models.PositiveIntegerField(
                        help_text="Total duration of the program in weeks"
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        help_text="Difficulty level (e.g., beginner, intermediate, advanced)",
                        max_length=20,
                    ),
                ),
                (
                    "location_type",
                    models.CharField(
                        choices=[
                            ("gym", "Gym"),
                            ("home", "Home"),
                            ("outdoors", "Outdoors"),
                        ],
                        help_text="Preferred training location (e.g., gym, home, any)",
                        max_length=20,
                    ),
                ),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="Is this program currently active and assignable?",
                    ),
                ),
                (
                    "goal",
                    models.ForeignKey(
                        help_text="Main fitness goal this program targets",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="profiles.goal",
                    ),
                ),
            ],
            options={
                "verbose_name": "Program",
                "verbose_name_plural": "Programs",
                "ordering": ["name"],
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ProgramWorkout",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "day_number",
                    models.PositiveIntegerField(
                        help_text="Day number in weekly cycle (e.g., 1 = first training day of the week)"
                    ),
                ),
                (
                    "week_number",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Week number in the program cycle (default is 1 for recurring weekly plans)",
                    ),
                ),
                (
                    "program",
                    models.ForeignKey(
                        help_text="Program this workout is part of",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="programs.program",
                    ),
                ),
                (
                    "workout",
                    models.ForeignKey(
                        help_text="Workout session assigned to the program",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="workouts.workout",
                    ),
                ),
            ],
            options={
                "verbose_name": "Program Workout",
                "verbose_name_plural": "Program Workouts",
                "ordering": ["program", "week_number", "day_number"],
                "unique_together": {("program", "week_number", "day_number")},
            },
            managers=[
                ("all_objects", django.db.models.manager.Manager()),
            ],
        ),
    ]
